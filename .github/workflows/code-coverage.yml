name: Code Coverage
on:
  workflow_dispatch:
  schedule:
    - cron: '* * * * *' # run every minute

jobs:

  run-all-tests:
    env:
      BRANCHES: 'BABEL_3_X_DEV'

    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        branch: ${{ env.BRANCHES }}

    steps:
      - uses: actions/checkout@v2
        id: checkout
        with: 
          ref: ${{ matrix.branch }}

      - name: Install Dependencies
        id: install-dependencies
        if: always()
        uses: ./.github/composite-actions/install-dependencies

      - name: Build Modified Postgres
        id: build-modified-postgres
        if: always() && steps.install-dependencies.outcome == 'success'
        uses: ./.github/composite-actions/build-modified-postgres

      - name: Compile ANTLR
        id: compile-antlr
        if: always() && steps.build-modified-postgres.outcome == 'success'
        uses: ./.github/composite-actions/compile-antlr

      - name: Build Extensions
        id: build-extensions
        if: always() && steps.compile-antlr.outcome == 'success'
        uses: ./.github/composite-actions/build-extensions

      - name: Install Extensions
        id: install-extensions
        if: always() && steps.build-extensions.outcome == 'success'
        uses: ./.github/composite-actions/install-extensions

      - name: Install Python
        id: install-python
        if: always() && steps.install-extensions.outcome == 'success'
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Configure Python Environment
        id: configure-python-environment
        if: always() && steps.install-python.outcome == 'success'
        run: |
          cd ~
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          cd ~/work/babelfish_extensions/babelfish_extensions/test/python
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 python3-dev
          pip3 install pyodbc==4.0.35 pymssql pytest pytest-xdist
      
      - name: Run Python Tests
        if: always() && steps.configure-python-environment.outcome == 'success'
        run: | 
          cd test/python
          compareWithFile=true \
            driver=pyodbc \
            runInParallel=false \
            testName=all \
            provider="ODBC Driver 17 for SQL Server" \
            fileGenerator_URL=localhost \
            fileGenerator_port=1433 \
            fileGenerator_databaseName=master \
            fileGenerator_user=jdbc_user \
            fileGenerator_password=12345678 \
            pytest -s --tb=long -q .
      - name: Generate code coverage HTML report
        id: code-coverage
        if: always()
        run: |
          export PG_CONFIG=~/psql/bin/pg_config
          export PG_SRC=~/work/postgresql_modified_for_babelfish
          export cmake=$(which cmake)
          cd contrib/babelfishpg_tsql
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -i -d . -d ./ -o lcov_base.info
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -d . -d ./ -o lcov_test.info
          rm -rf coverage
          /usr/bin/genhtml -q --legend -o coverage --title='PostgreSQL 15.2' --ignore-errors source --num-spaces=4  lcov_base.info lcov_test.info
          touch coverage-html-stamp
          cd ../babelfishpg_tds
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -i -d . -d ./ -o lcov_base.info
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -d . -d ./ -o lcov_test.info
          rm -rf coverage
          /usr/bin/genhtml -q --legend -o coverage --title='PostgreSQL 15.2' --ignore-errors source --num-spaces=4  lcov_base.info lcov_test.info
          touch coverage-html-stamp
          cd ../babelfishpg_common
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -i -d . -d ./ -o lcov_base.info
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -d . -d ./ -o lcov_test.info
          rm -rf coverage
          /usr/bin/genhtml -q --legend -o coverage --title='PostgreSQL 15.2' --ignore-errors source --num-spaces=4  lcov_base.info lcov_test.info
          touch coverage-html-stamp
          cd ../babelfishpg_money
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -i -d . -d ./ -o lcov_base.info
          /usr/bin/lcov --gcov-tool /usr/bin/gcov -q --no-external -c -d . -d ./ -o lcov_test.info
          rm -rf coverage
          /usr/bin/genhtml -q --legend -o coverage --title='PostgreSQL 15.2' --ignore-errors source --num-spaces=4  lcov_base.info lcov_test.info
          touch coverage-html-stamp
        shell: bash

      - name: Summarize code coverage
        id: code-coverage-summary
        if: always()
        run: |
          cd contrib/
          lcov -a babelfishpg_tsql/lcov_test.info -a babelfishpg_tds/lcov_test.info -a babelfishpg_common/lcov_test.info -a babelfishpg_money/lcov_test.info -o lcov.info
          lcov --list lcov.info
      - name: Upload Coverage Report for babelfishpg_tsql extension
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage_tsql
          path: contrib/babelfishpg_tsql/coverage/

      - name: Upload Coverage Report for babelfishpg_tds extension
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage_tds
          path: contrib/babelfishpg_tds/coverage/

      - name: Upload Coverage Report for babelfishpg_common extension
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage_common
          path: contrib/babelfishpg_common/coverage/

      - name: Upload Coverage Report for babelfishpg_money extension
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage_money
          path: contrib/babelfishpg_money/coverage/
